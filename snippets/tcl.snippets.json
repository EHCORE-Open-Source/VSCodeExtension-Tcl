{
    "catch exceptions": {
        "prefix": "catch",
        "body": [
            "catch {${1:script}} ${0:result}"
        ],
        "description": "catch exceptions"
    },
    "evalute 1 run time": {
        "prefix": "time",
        "body": [
            "time {",
            "\t$0",
            "}"
        ],
        "description": "running time estimation"
    },
    "evalute N run time": {
        "prefix": "time",
        "body": [
            "time {",
            "\t$0",
            "} {${1:count}}"
        ],
        "description": "running time estimation"
    },
    "uplevel": {
        "prefix": "uplevel",
        "body": [
            "uplevel ${1:level} {",
            "\t$0",
            "}"
        ],
        "description": "execute a script in a different stack frame"
    },
    "procedure": {
        "prefix": "proc",
        "body": [
            "proc ${1:name} {${2:arguments}} {",
            "\t$0",
            "}"
        ],
        "description": "procedure statement"
    },
    "procedure with arguments and default values": {
        "prefix": "proc",
        "body": [
            "proc ${1:name} {${2:{${3:argument} ${4:defaultValue}\\} ${5:arguments}}} {",
            "\t$0",
            "}"
        ],
        "description": "procedure statement"
    },
    "variadic procedure without other arguments": {
        "prefix": "proc",
        "body": [
            "proc ${1:name} args {",
            "\t$0",
            "}"
        ],
        "description": "procedure statement"
    },
    "variadic procedure with arguments": {
        "prefix": "proc",
        "body": [
            "proc ${1:name} {${2:arguments} args}} {",
            "\t$0",
            "}"
        ],
        "description": "procedure statement"
    },
    "variadic procedure with arguments and default values": {
        "prefix": "proc",
        "body": [
            "proc ${1:name} {${2:${3:{${4:argument} ${5:defaultValue}\\} ${6:arguments}} args}} {",
            "\t$0",
            "}"
        ],
        "description": "procedure statement"
    },
    "if": {
        "prefix": "if",
        "body": [
            "if {${1:condition}} {",
            "\t$0",
            "}"
        ],
        "description": "if-else statement"
    },
    "if-else": {
        "prefix": "if",
        "body": [
            "if {${1:condition}} {",
            "\t$2",
            "} else {",
            "\t$0",
            "}"
        ],
        "description": "if-else statement"
    },
    "if-elseif-else": {
        "prefix": "if",
        "body": [
            "if {${1:condition}} {",
            "\t$2",
            "} elseif {${3:condition}} {",
            "\t$4",
            "} else {",
            "\t$0",
            "}"
        ],
        "description": "if-else statement"
    },
    "if (explicit)": {
        "prefix": "if",
        "body": [
            "if {",
            "\t${1:condition}",
            "} then {",
            "\t$0",
            "}"
        ],
        "description": "if-else statement"
    },
    "elseif": {
        "prefix": "elseif",
        "body": [
            "elseif {${1:condition}} {",
            "\t$0",
            "}"
        ],
        "description": "if-else statement"
    },
    "elseif-else": {
        "prefix": "elseif",
        "body": [
            "elseif {${1:condition}} {",
            "\t$2",
            "} else {",
            "\t$0",
            "}"
        ],
        "description": "if-else statement"
    },
    "elseif (explicit)": {
        "prefix": "elseif",
        "body": [
            "elseif {",
            "\t${1:condition}",
            "} then {",
            "\t$0",
            "}"
        ],
        "description": "if-else statement"
    },
    "else": {
        "prefix": "else",
        "body": [
            "else {",
            "\t$0",
            "}"
        ],
        "description": "if-else statement"
    },
    "switch-case without default": {
        "prefix": "switch",
        "body": [
            "switch ${1:expression} {",
            "\t${2:case} {",
            "\t\t$3",
            "\t}",
            "}"
        ],
        "description": "switch-case statement"
    },
    "switch-case with default": {
        "prefix": "switch",
        "body": [
            "switch ${1:expression} {",
            "\t${2:case} {",
            "\t\t$3",
            "\t}",
            "\tdefault {",
            "\t\t$0",
            "\t}",
            "}"
        ],
        "description": "switch-case statement"
    },
    "while-loop (infinite)": {
        "prefix": "while",
        "body": [
            "while {1} {",
            "\t$0",
            "}"
        ],
        "description": "while-loop statement"
    },
    "while-loop (standard)": {
        "prefix": "while",
        "body": [
            "while {${1:condition}} {",
            "\t$0",
            "}"
        ],
        "description": "while-loop statement"
    },
    "for-loop (general)": {
        "prefix": "for",
        "body": [
            "for {set ${1:index} 0} {${1:index} < ${2:end}} {incr ${1:index}} {",
            "\t$0",
            "}"
        ],
        "description": "for-loop statement"
    },
    "for-loop (standard)": {
        "prefix": "for",
        "body": [
            "for {${1:initialization}} {${2:condition}} {${3:increment}} {",
            "\t$0",
            "}"
        ],
        "description": "for-loop statement"
    },
    "foreach": {
        "prefix": "foreach",
        "body": [
            "foreach ${1:variable} ${2:list} {",
            "\t$0",
            "}"
        ],
        "description": "foreach statement"
    },
    "foreach with custom list": {
        "prefix": "foreach",
        "body": [
            "foreach ${1:{${2:variables}\\}} ${3:{${4:list}\\}} {",
            "\t$0",
            "}"
        ],
        "description": "foreach statement"
    },
    "foreach with two parallel list": {
        "prefix": "foreach",
        "body": [
            "foreach ${1:1st_variables} ${2:1st_list} ${3:2nd_variables} ${4:2nd_list} {",
            "\t$0",
            "}"
        ],
        "description": "foreach statement"
    },
    "foreach with two parallel custom list": {
        "prefix": "foreach",
        "body": [
            "foreach ${1:{${2:1st_variables}\\}} ${3:{${4:1st_list}\\}} ${5:{${6:2nd_variables}\\}} ${7:{${8:2nd_list}\\}} {",
            "\t$0",
            "}"
        ],
        "description": "foreach statement"
    }
}